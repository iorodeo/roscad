"""
Copyright 2010  IO Rodeo Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
from __future__ import division
import copy
import math
import re


class SCADExportMap(object):
    def __init__(self):
        self.indent_str = " "*4

        self.comment_str = "//"

        self.block_open_str = "{"

        self.block_close_str = "}"

        self.export_dict = {}

    def get_file_header_str(self,filename,depth):
        if (depth == 0) and (self.comment_str != ""):
            import textwrap
            width = 70
            str0 = '\n' + self.comment_str + '='*(width-len(self.comment_str)*2) + self.comment_str + '\n'
            # see "http://docs.python.org/library/string.html#formatspec"
            str1 = '//{0:=^{1}}//'.format(" " + filename + " ", width-len(self.comment_str)*2)
            str1 += '\n' + self.comment_str + ' '*(width-len(self.comment_str)*2) + self.comment_str + '\n'
            str2 = "Autogenerated using ros_cad. Hand editing this file is not advisable as all modifications will be lost when the program which generated this file is re-run."
            # str2 uses width-(len(self.comment_str)*2 + 1) because of the extra space after the initial slashes
            str2 = "\n".join((self.comment_str + " {0:<{1}}" + self.comment_str).format(l, width-(len(self.comment_str)*2 + 1)) for l in
                             textwrap.wrap(str2, width=width-(len(self.comment_str)*2 + 1)))
            return str0 + str1 + str2 + str0 + '\n'
        else:
            return ""

    def get_obj_str(self,class_name):
        return class_name

    def get_obj_header_str(self):
        obj_str = "{indent}translate(v=[{position[0]:0.5f},{position[1]:0.5f},{position[2]:0.5f}]){block_open} rotate(a=[{angle[0]:0.5f},{angle[1]:0.5f},{angle[2]:0.5f}]){block_open} scale(v=[{scale[0]:0.5f},{scale[1]:0.5f},{scale[2]:0.5f}]){block_open} {obj}\n"
        return obj_str

    def get_obj_footer_str(self,depth=0):
        obj_footer_str = "{indent}{block_close}{block_close}{block_close}\n"
        obj_footer_str = obj_footer_str.format(indent = self.indent_str*depth,
                                               block_close = self.block_close_str)
        return obj_footer_str

if __name__ == "__main__":
    scad_export_map = SCADExportMap()
